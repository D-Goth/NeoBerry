#!/bin/bash

set -e

# üîç V√©rifie que git est disponible
command -v git >/dev/null || {
  echo "‚ùå git n‚Äôest pas install√© ‚Äî veuillez l‚Äôinstaller avant de poursuivre"
  exit 1
}

# D√©tecter si le script est lanc√© via curl | bash
if [[ "${BASH_SOURCE[0]}" == "/dev/fd/"* ]]; then
    MODE="curl"
    echo "üì° Mode installation : ex√©cution en flux (curl | bash)"
    INSTALL_DIR="$PWD/NeoBerry"
    mkdir -p "$INSTALL_DIR"
    cd "$INSTALL_DIR"

    if [ -d ".git" ]; then
      echo "üì¶ Le dossier NeoBerry existe d√©j√†, le clonage est ignor√©"
    else
      echo "üì• T√©l√©chargement du d√©p√¥t NeoBerry dans $INSTALL_DIR"
      git clone https://github.com/D-Goth/NeoBerry.git . || {
        echo "‚ùå √âchec du clonage"
        exit 1
      }
    fi
else
    MODE="local"
    echo "üìÅ Mode installation : script local d√©tect√©"
    REPO_ROOT=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
    cd "$REPO_ROOT"
    INSTALL_DIR="$REPO_ROOT"
fi

echo "üì¶ Installation dans : $INSTALL_DIR"

echo "üöÄ Installation de NeoBerry (d√©pendances globales pour Raspberry Pi)‚Ä¶"

# üöß Mise √† jour syst√®me via le script d√©di√© (si pr√©sent)
UPDATE_SCRIPT="$(dirname "$0")/update_neoBerry.sh"
if [ -x "$UPDATE_SCRIPT" ]; then
  echo "üîÑ Lancement de : $UPDATE_SCRIPT"
  "$UPDATE_SCRIPT"
else
  echo "‚ö†Ô∏è Script de mise √† jour non trouv√© √† $UPDATE_SCRIPT ‚Äî √©tape ignor√©e"
fi

# V√©rifie les droits
if [ "$EUID" -ne 0 ]; then
  echo "‚ùå Ce script doit √™tre ex√©cut√© avec sudo."
  exit 1
fi

echo "üß© Mise √† jour des paquets..."
apt update && apt upgrade -y

echo "üì¶ Installation des paquets n√©cessaires..."
apt install -y \
  python3 \
  python3-pip \
  python3-flask \
  python3-rpi.gpio \
  python3-psutil \
  python3-requests \
  python3-dotenv \
  python3-gunicorn \
  python3-jinja2 \
  python3-markupsafe \
  python3-click \
  python3-itsdangerous \
  git \
  curl

# üîê Ajout des droits sudo pour reboot/shutdown sans mot de passe
USERNAME="$(whoami)"
CMD_REBOOT="$(which reboot)"
CMD_SHUTDOWN="$(which shutdown)"

if sudo grep -q "$USERNAME ALL=(ALL) NOPASSWD: $CMD_REBOOT, $CMD_SHUTDOWN" /etc/sudoers; then
  echo "‚úì R√®gles sudo d√©j√† pr√©sentes pour $USERNAME"
else
  echo "‚ûï Ajout des permissions sudo pour $USERNAME"
  echo "$USERNAME ALL=(ALL) NOPASSWD: $CMD_REBOOT, $CMD_SHUTDOWN" | sudo EDITOR="tee -a" visudo
fi

echo "üîí V√©rification des groupes syst√®me n√©cessaires (gpio, dialout)..."

# D√©tection du mat√©riel pour info
if grep -q 'Raspberry Pi' /proc/device-tree/model 2>/dev/null; then
  echo "üçì Mat√©riel d√©tect√© : Raspberry Pi"
else
  echo "üíª Mat√©riel non-Raspberry, certains groupes peuvent √™tre absents (et ce n‚Äôest pas bloquant)"
fi

for grp in gpio dialout; do
  if getent group "$grp" >/dev/null; then
    usermod -aG "$grp" "$SUDO_USER"
    echo "‚úÖ Ajout de l‚Äôutilisateur '$SUDO_USER' au groupe '$grp'"
  else
    echo "‚ÑπÔ∏è Groupe '$grp' non pr√©sent sur ce syst√®me ‚Äî ignor√©"
  fi
done

echo "üîß Configuration sudoers pour commandes sans mot de passe (rfkill, bluetoothctl, gpio, etc.)"
CMD_LIST="/usr/bin/rfkill, /usr/bin/bluetoothctl, /usr/bin/gpio, /usr/bin/hcitool"
SUDO_LINE="$SUDO_USER ALL=(ALL) NOPASSWD: $CMD_LIST"

if ! sudo grep -qF "$SUDO_LINE" /etc/sudoers; then
  echo "$SUDO_LINE" | sudo EDITOR="tee -a" visudo
  echo "‚úÖ R√®gle ajout√©e √† /etc/sudoers"
else
  echo "‚ÑπÔ∏è R√®gle sudoers d√©j√† pr√©sente"
fi

# ‚úÖ Ajout sudoers pour le script de mise √† jour
UPDATE_SCRIPT="$INSTALL_DIR/update_neoBerry.sh"
if [ -x "$UPDATE_SCRIPT" ]; then
  if sudo grep -qF "$USERNAME ALL=(ALL) NOPASSWD: $UPDATE_SCRIPT" /etc/sudoers; then
    echo "‚úì R√®gle sudo d√©j√† pr√©sente pour $UPDATE_SCRIPT"
  else
    echo "‚ûï Ajout de la r√®gle sudoers pour update_neoBerry.sh"
    echo "$USERNAME ALL=(ALL) NOPASSWD: $UPDATE_SCRIPT" | sudo EDITOR="tee -a" visudo
  fi
else
  echo "‚ö†Ô∏è Script $UPDATE_SCRIPT introuvable ou non ex√©cutable ‚Äî saut de l'√©tape sudoers"
fi

echo "üßπ Nettoyage √©ventuel des .pyc..."
[ -d "app" ] && find app/ -type f -name "*.pyc" -delete

echo ""
echo "üçì NeoBerry est pr√™t."
echo "Retrouvez d'autres projets sur le Github/D-Goth"
echo "Et sur le site Black-Lab.fr"
echo "üëâ Lancez-le avec : ./run_neoBerry.sh --start"
